from collections import defaultdict
wires = {}
mem = defaultdict(lambda: None)
file_name = "input.txt"

def import_data(input):
    with open (input, "r") as file:
        for line in file:
            instructions, wire = line.strip().split(" -> ")
            wires[wire] = instructions


def findans(wire):
    if wire.isnumeric():
        return int(wire)
    
    signal = wires[wire]

    if type(signal) == int or signal.isnumeric():
        wires[wire] = int(signal)
    else:
        if "AND" in signal:
            a, b = signal.split(' AND ')
            wires[wire] = findans(a) & findans(b)
        
        elif "OR" in signal:
            a, b = signal.split(' OR ')
            wires[wire] = findans(a) | findans(b)

        elif "LSHIFT" in signal:
            a, b = signal.split(" LSHIFT ")
            wires[wire] = findans(a) << int(b)

        elif "RSHIFT" in signal:
            a, b = signal.split(" RSHIFT ")
            wires[wire] = findans(a) >> int(b)

        elif "NOT" in signal:
            _, a = signal.split()
            wires[wire] = ~(findans(a))

        else:
            wires[wire] = findans(signal)
    
    return wires[wire]

print(findans('a'))